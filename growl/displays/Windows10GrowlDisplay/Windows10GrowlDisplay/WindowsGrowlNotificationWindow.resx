<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="icon.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wwAADsMBx2+oZAAAABh0RVh0U29mdHdhcmUAcGFpbnQubmV0IDQuMC42/Ixj3wAABAtJREFUWEfFl21I
        W1cYx0+iEWPFMYmudDEyXZe+UArShW5sg9lR96F7EcyH4RAsVNElMTdJ82ZNhhjTl3XQwlbMaKdL2zXp
        S1ITNJZWo07tUulcck2mjMHWD0VacDTtyqzJs5t6Rlt3vCbXjf3h9yXnOc//z8m5596DuKr93PXtjcd9
        MsWJgOyI9+YW/PN/JeBtkbtztu13Npe1BaeRYXour5VeFJrCkGeOgLCVXuAZ6LnXP/WFdtu8++RWdw6e
        uHbJ7Ne3S9WXPPmKAWCMV4WnCcEGwyDsaOvrUTpp7itDucaFVRb3hXWKwCOkjxDNWGHmFCl9C7taXU1y
        uTsLt01PVV+GpFLLd3f41Pfk5hmQ2zIMJWrfqSPXfinF7dlVc8grLdH446RmXOFRISht6HKh1Vai5qhL
        KNVfvoMMNLHRcsrsM1BinyWOLYevuQGbld90YyuyNitOXeBpbxAbLKe8cxZ++zMJY/NJ4jgJATUBb+q+
        NmK7Z/Xh4f4PsqjQI9JEEuvbYxC5n4DA3fQDpBCp+v+oPdgnxrZLkrshS2QJ06QJbGSZoo8hja2Ibgo2
        HRh1Y+sl7Tad2ZStHiNPYCHbGAG+Mb398jQiJXOmPK0dlNNDKmRDYpuBwXsAntuZ/QUpspkN+Z7xnAnb
        I1TQ5JkjFbKx0UbD3WQSovcyD5BiW9vI1GPz2i/GXs1lznNSERsbO2h4kFiAnzkGyKVGf2romhSgFxQ+
        GV8fJhaxUW6LQTyRgBmOAUSqXlA6nGJU0HhJxuMQoMwWZQIkIcYxQIE2CNVWhxgVfnRcxt//A7GIjbLO
        aXiwmIBYnGMA4yS8a2VWQFz3/wQoVvVD7THmQNpJdcsEeo4BmD3ANYBEE0iYXeMvIuOZ8PPPNXt/JxWx
        sdYApdqBpccwpa2W4V9JRWysNUDxx19R2B4hiS36CamIjaUAzFPAMcDebvp9bI/Qnq7ePJFx4iGpcCXK
        bRG4zwSYzTSAnobylothbP1EFdrTdoEm/U+wlzumIL7IBMjwHBCqR+Dt1rOV2PaJrD2jkhJV+u+El5gV
        uJUEuJnhClSYeycRAA/bPqu6E+PV66gR4sTl5Jij0DQwD/W+eeL4P2BO23zVlVvyw/712I6stwzftgiV
        VxPEJmugWNW7UNXukmIbdlWY/c05psw/NFaiSDcMDSfH6nH79PTa53SNqPH8bb56gth0dWgQqEagkBqa
        RDqafdlXkoHZmO9Yzg/mq68RDNjZoPI/rDKdPpC6V+J23KV0/rhzqzlwtEjlj4m0g8DXMe8O5nn+24zH
        XMMEzJ2wkArGJWrv1K4Oj906NJSNp/97SjWtPnhRXHnoakVdV9BR2XnZseezfse+k0HHG5qeV+qP9RXh
        0jSF0F+TLixoddr4MwAAAABJRU5ErkJggg==
</value>
  </data>
</root>